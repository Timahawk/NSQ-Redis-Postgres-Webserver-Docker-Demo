version: '3.8'

services:

    nsqlookupd:
        image: nsqio/nsq
        command: /nsqlookupd
        ports:
            # Consumers need to suscribe to this port!
            - "4160:4160"
            - "4161:4161"


    # So if doing a final deploy change the command, command out ports and network modes.
    # When running in "network_mode: host" everytjhing is available via localhost.
    # This is needed because how nsqd and lookup interact. The lookup returns the docker internal IP.
    # As a result Client cannot connect.
    nsqd:
        image: nsqio/nsq
        command: /nsqd --lookupd-tcp-address=nsqlookupd:4160
        # command: /nsqd --lookupd-tcp-address=127.0.0.1:4160
        depends_on:
            - nsqlookupd
        ports:
            # Messages need to be send to this port ?!
            - "4150:4150" 
            - "4151:4151"
        # network_mode: host
        # deploy:
        #     replicas: 1


    nsqadmin:
        image: nsqio/nsq
        command: /nsqadmin --lookupd-http-address=nsqlookupd:4161
        # command: /nsqadmin --lookupd-http-address=127.0.0.1:4161
        depends_on:
            - nsqlookupd  
        ports:
            - "4171:4171"
        # network_mode: host


    gobackend:
        build: ./backend
        volumes:
            - ./backend:/usr/src/backend
        # restart_policy:
        #     condition: on-failure
        #     delay: 3s
        #     max_attempts: 2
        #     window: 120s
        ports: 
            - "8080:8080"
        depends_on:
            - postgresDB
            - redisCache
            - nsqd
            - jaegertracing
        environment:
            - DATABASE_URL=postgres://postgres:postgres@postgresDB:5432
            - CACHE_URL=redisCache
            - NSQ_DEMON=nsqd
            - JAEGER_URL=jaegertracing:14268
            - TRACING_URL=tracingapp:8001
            - MY_NAME=test


    # Simple Consumer
    nsqconsumer_links:
        build: ./nsqconsumer
        volumes:
            - ./nsqconsumer:/usr/src/nsqconsumer
        depends_on:
            - postgresDB
            - redisCache
            - nsqlookupd
            - nsqd
        environment:
            - NSQ_LOOKUP=nsqlookupd
            - NSQ_TOPIC=default
            - NSQ_CHAN=links
        deploy:
            replicas: 2

    # Same as _links but different Channel
    nsqconsumer_rechts:
        build: ./nsqconsumer
        volumes:
            - ./nsqconsumer:/usr/src/nsqconsumer
        depends_on:
            - postgresDB
            - redisCache
            - nsqlookupd
            - nsqd
        environment:
            - NSQ_LOOKUP=nsqlookupd
            - NSQ_TOPIC=default
            - NSQ_CHAN=rechts
        deploy:
            replicas: 2

    tracingapp:
        build: ./tracingApp
        depends_on:
            - gobackend
        volumes:
            - ./tracingApp:/usr/src/tracingApp
        environment:
            - JAEGER_URL=jaegertracing:14268
        ports:
            - "8001:8001"


    postgresDB:
        image: postgres:15.1-alpine
        restart: always
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        ports:
            - '5432:5432'
        volumes:
            - ./db.sql:/docker-entrypoint-initdb.d/db.sql
            - db:/var/lib/postgresql/data


    redisCache:
        image: redis:4.0-alpine
        restart: always
        ports:
            - '6379:6379'
        # command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
        volumes: 
            - cache:/data


    prometheus:
        image: prom/prometheus:latest
        ports:
            - "9090:9090"
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus_data:/prometheus

        depends_on:
            - gobackend

    jaegertracing:
        image: jaegertracing/all-in-one:latest
        ports:
            - "5775:5775/udp"
            - "6831:6831/udp"
            - "6832:6832/udp"
            - 5778:5778
            - "16686:16686"
            - "14268:14268"
            - "9411:9411"
        environment:
            - COLLECTOR_ZIPKIN_HTTP_PORT=9411


volumes:
    db:
        driver: local
    cache:
        driver: local
    prometheus_data:
        driver: local
